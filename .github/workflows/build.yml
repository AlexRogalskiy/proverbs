name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      max-parallel: 2
      matrix:
        node: [ "12", "14", "15" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          check-latest: false
          registry-url: 'https://registry.npmjs.org'

      - name: Extract tag and version
        id: extract
        run: |-
          ref=${{ github.ref }}
          branch=${ref:11}
          tag_version=${branch:9}
          tag=${tag_version%/*}
          version=${tag_version##*/}

          echo "::set-output name=tag::${tag}"
          echo "::set-output name=version::${version}"

      - name: Log versions
        run: |-
          echo tag=${{ steps.extract.outputs.tag }}
          echo version=${{ steps.extract.outputs.version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install

      - name: Jest
        run: yarn test:all

      - name: Check
        run: yarn check:all

      - name: coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: actions ${{ matrix.node }}
          file: ./coverage/coverage-final.json
          fail_ci_if_error: true
          verbose: true
